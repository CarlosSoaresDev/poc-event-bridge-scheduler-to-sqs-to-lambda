name: Infra poc event bridge schedule to sqs to lambda

env:
  service-name: transactions-processor
  working-directory-build: ./app 
  working-directory-root: ./ 

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master 

    - name: Setup python     
      uses: actions/setup-python@v4
      with:
       python-version: '3.10'

  deploy:
    name: Deploy       
    runs-on: ubuntu-latest
    needs: build
    steps:  
     - name: Checkout
       uses: actions/checkout@master 

     - name: root directory
       run: ls -R
       working-directory: ${{env.worker-directory-root}}         
    
     - name: Configure AWS credentials
       id: credentialsaws
       uses: aws-actions/configure-aws-credentials@v1
       with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: ${{ secrets.AWS_REGION }}

     - name: Create release to layer
       run: |
          echo " ########## Start generate layer packges ##########"
          ls -R
          mkdir -p layer/python/lib/python3.10/site-packages
          ls -R
          pip3 install -r requirements.txt -t layer/python/lib/python3.10/site-packages/
          cd layer
          ls -R
          zip -r transactions-processor-layer.zip *
          ls -R
          aws s3 cp ./transactions-processor-layer.zip s3://s3-artefact-bucket
          cd ..
          ls -R
          rm -r layer
          ls -R
          echo " ########## Start generate layer packges ##########"
       working-directory: ${{env.working-directory-build}}  

     - name: Create release to app lambda
       run: |
          echo " ########## Start generate lambda app ##########"
          ls -R
          zip -r transactions-processor.zip *
          ls -R
          aws s3 cp ./transactions-processor.zip s3://s3-artefact-bucket
         
          echo " ########## Start generate lambda app ##########"
       working-directory: ${{env.working-directory-build}}  

     - name: AWS Deploy CloudFormation Stack
       run: |
           ls -R
           aws cloudformation deploy \
           --template-file Template.yml \
           --capabilities CAPABILITY_NAMED_IAM \
           --parameter-overrides  AccessKey=${{ secrets.AWS_ACCESS_KEY_ID }} SecretKey=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
           --stack-name ${{env.service-name}}   
       working-directory: ${{env.working-directory-root}}/infra  
